import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

interface Product {
  id: number;
  title: string;
  category: string;
  price: string;
  image: string;
  description: string;
  features: string[];
}

const products: Product[] = [
  {
    id: 1,
    title: '–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è –∑–≤–µ–∑–¥–∞',
    category: '–ù–∞–≥—Ä–∞–¥—ã',
    price: '–æ—Ç 45 000 ‚ÇΩ',
    image: 'üèÜ',
    description: '–ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –∏–∑ –æ–ø—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ö—Ä—É—Å—Ç–∞–ª—è —Å –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–æ–π',
    features: ['–û–ø—Ç–∏—á–µ—Å–∫–∏–π —Ö—Ä—É—Å—Ç–∞–ª—å', '–õ–∞–∑–µ—Ä–Ω–∞—è –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–∞', '–ü–æ–¥–∞—Ä–æ—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞'],
  },
  {
    id: 2,
    title: '–ó–æ–ª–æ—Ç–∞—è –∑–≤–µ–∑–¥–∞ –ì–µ—Ä–æ—è',
    category: '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ',
    price: '–æ—Ç 120 000 ‚ÇΩ',
    image: '‚≠ê',
    description: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –∏–∑ –∑–æ–ª–æ—Ç–∞ 585 –ø—Ä–æ–±—ã —Å —ç–º–∞–ª—å—é',
    features: ['–ó–æ–ª–æ—Ç–æ 585¬∞', '–†—É—á–Ω–∞—è —ç–º–∞–ª—å', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏'],
  },
  {
    id: 3,
    title: '–ü—Ä–µ–º–∏—É–º –Ω–∞–±–æ—Ä —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è',
    category: '–ü–æ–¥–∞—Ä–∫–∏',
    price: '–æ—Ç 85 000 ‚ÇΩ',
    image: 'üíº',
    description: '–ù–∞–±–æ—Ä –∏–∑ –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–π –∫–æ–∂–∏ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π',
    features: ['–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –∫–æ–∂–∞', '–®–≤–µ–π—Ü–∞—Ä—Å–∫–∏–µ —á–∞—Å—ã', '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–∞'],
  },
  {
    id: 4,
    title: '–ö—É–±–æ–∫ –ü–æ–±–µ–¥–∏—Ç–µ–ª—è',
    category: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ',
    price: '–æ—Ç 65 000 ‚ÇΩ',
    image: 'ü•á',
    description: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫—É–±–æ–∫ —Å –∑–æ–ª–æ—Ç—ã–º –Ω–∞–ø—ã–ª–µ–Ω–∏–µ–º',
    features: ['–ó–æ–ª–æ—Ç–æ–µ –Ω–∞–ø—ã–ª–µ–Ω–∏–µ', '–ú—Ä–∞–º–æ—Ä–Ω–∞—è –ø–æ–¥—Å—Ç–∞–≤–∫–∞', '3D –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–∞'],
  },
  {
    id: 5,
    title: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —â–∏—Ç',
    category: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ',
    price: '–æ—Ç 55 000 ‚ÇΩ',
    image: 'üõ°Ô∏è',
    description: '–ù–∞—Å—Ç–µ–Ω–Ω—ã–π —â–∏—Ç —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –∫–æ–º–ø–∞–Ω–∏–∏',
    features: ['–õ–∞—Ç—É–Ω—å —Å –ø–∞—Ç–∏–Ω–æ–π', '–û–±—ä—ë–º–Ω—ã–π –ª–æ–≥–æ—Ç–∏–ø', '–ö—Ä–µ–ø–ª–µ–Ω–∏–µ –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ'],
  },
  {
    id: 6,
    title: '–°—Ç–∞—Ç—É—ç—Ç–∫–∞ "–õ–∏–¥–µ—Ä"',
    category: '–ù–∞–≥—Ä–∞–¥—ã',
    price: '–æ—Ç 95 000 ‚ÇΩ',
    image: 'üóø',
    description: '–ë—Ä–æ–Ω–∑–æ–≤–∞—è —Å—Ç–∞—Ç—É—ç—Ç–∫–∞ —Ä–∞–±–æ—Ç—ã –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Å–∫—É–ª—å–ø—Ç–æ—Ä–∞',
    features: ['–ê–≤—Ç–æ—Ä—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞', '–ë—Ä–æ–Ω–∑–∞ –õ–ú–¶', '–ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–∏—Ä–∞–∂'],
  },
];

const categories = ['–í—Å–µ', '–ù–∞–≥—Ä–∞–¥—ã', '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ', '–ü–æ–¥–∞—Ä–∫–∏', '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ', '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ'];

interface CatalogProps {
  onSelectForAI?: (product: Product) => void;
}

export default function Catalog({ onSelectForAI }: CatalogProps) {
  const [activeCategory, setActiveCategory] = useState('–í—Å–µ');
  const [hoveredId, setHoveredId] = useState<number | null>(null);

  const filteredProducts = activeCategory === '–í—Å–µ' 
    ? products 
    : products.filter(p => p.category === activeCategory);

  const scrollToContact = () => {
    document.getElementById('contact')?.scrollIntoView({ behavior: 'smooth' });
  };

  return (
    <section id="catalog" className="py-24 bg-background">
      <div className="container mx-auto px-4">
        <div className="max-w-3xl mx-auto text-center mb-16">
          <Badge variant="outline" className="mb-4">
            <Icon name="Grid3x3" className="mr-2" size={14} />
            –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏
          </Badge>
          <h2 className="text-4xl md:text-6xl font-bold mb-6">
            –ù–∞—à–∏ –Ω–∞–≥—Ä–∞–¥—ã –∏ –ø–æ–¥–∞—Ä–∫–∏
          </h2>
          <p className="text-xl text-muted-foreground">
            –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏ –≤—ã–¥–∞—é—â–∏—Ö—Å—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
          </p>
        </div>

        <div className="flex flex-wrap justify-center gap-3 mb-12">
          {categories.map((category) => (
            <Button
              key={category}
              variant={activeCategory === category ? 'default' : 'outline'}
              onClick={() => setActiveCategory(category)}
              className="transition-all"
            >
              {category}
            </Button>
          ))}
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {filteredProducts.map((product) => (
            <Card 
              key={product.id}
              className="group overflow-hidden border-2 hover:border-primary/50 transition-all duration-300 cursor-pointer"
              onMouseEnter={() => setHoveredId(product.id)}
              onMouseLeave={() => setHoveredId(null)}
            >
              <div className="aspect-square bg-gradient-to-br from-muted/30 to-muted/60 flex items-center justify-center text-8xl relative overflow-hidden">
                <div className={`transition-transform duration-500 ${hoveredId === product.id ? 'scale-110' : 'scale-100'}`}>
                  {product.image}
                </div>
                <div className={`absolute inset-0 bg-primary/10 transition-opacity ${hoveredId === product.id ? 'opacity-100' : 'opacity-0'}`} />
              </div>

              <div className="p-6">
                <div className="flex items-start justify-between mb-3">
                  <Badge variant="secondary" className="text-xs">
                    {product.category}
                  </Badge>
                  <span className="text-lg font-bold text-primary">
                    {product.price}
                  </span>
                </div>

                <h3 className="text-2xl font-bold mb-3 group-hover:text-primary transition-colors">
                  {product.title}
                </h3>

                <p className="text-muted-foreground mb-4 leading-relaxed">
                  {product.description}
                </p>

                <div className="space-y-2 mb-6">
                  {product.features.map((feature, idx) => (
                    <div key={idx} className="flex items-center gap-2 text-sm">
                      <Icon name="Check" className="text-primary flex-shrink-0" size={16} />
                      <span>{feature}</span>
                    </div>
                  ))}
                </div>

                <div className="grid grid-cols-2 gap-2">
                  <Button 
                    variant="outline"
                    onClick={scrollToContact}
                    className="group/btn"
                  >
                    –ó–∞–∫–∞–∑–∞—Ç—å
                  </Button>
                  <Button 
                    onClick={() => onSelectForAI?.(product)}
                    className="group/btn"
                  >
                    <Icon name="Sparkles" className="mr-1" size={16} />
                    AI –º–∞–∫–µ—Ç
                  </Button>
                </div>
              </div>
            </Card>
          ))}
        </div>

        <div className="text-center mt-16">
          <p className="text-lg text-muted-foreground mb-6">
            –ù–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç?
          </p>
          <Button size="lg" variant="outline" onClick={scrollToContact}>
            <Icon name="Lightbulb" className="mr-2" size={20} />
            –°–æ–∑–¥–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω
          </Button>
        </div>
      </div>
    </section>
  );
}