import { useState } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

export interface Product {
  id: number;
  title: string;
  category: string;
  occasion: string;
  recipient: string;
  price: string;
  image: string;
}

const products: Product[] = [
  {
    id: 1,
    title: '–ö—É–±–æ–∫ "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ"',
    category: '–ö—É–±–∫–∏',
    occasion: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ',
    recipient: '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é',
    price: '–æ—Ç 45 000 ‚ÇΩ',
    image: 'üèÜ'
  },
  {
    id: 2,
    title: '–°—Ç–∞—Ç—É—ç—Ç–∫–∞ "–ü—Ä–∏–∑–Ω–∞–Ω–∏–µ"',
    category: '–°—Ç–∞—Ç—É—ç—Ç–∫–∏',
    occasion: '–Æ–±–∏–ª–µ–π',
    recipient: '–ü–∞—Ä—Ç–Ω–µ—Ä—É',
    price: '–æ—Ç 65 000 ‚ÇΩ',
    image: '‚≠ê'
  },
  {
    id: 3,
    title: '–ü–ª–∞–∫–µ—Ç–∫–∞ —Å –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–æ–π',
    category: '–ü–ª–∞–∫–µ—Ç–∫–∏',
    occasion: '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è',
    recipient: '–°–ø–∏–∫–µ—Ä—É',
    price: '–æ—Ç 25 000 ‚ÇΩ',
    image: 'üéØ'
  },
  {
    id: 4,
    title: '–ù–∞–≥—Ä–∞–¥–∞ "–ò–Ω–Ω–æ–≤–∞—Ü–∏—è"',
    category: '–ö—É–±–∫–∏',
    occasion: '–ö–æ–Ω–∫—É—Ä—Å',
    recipient: '–ö–æ–º–∞–Ω–¥–µ',
    price: '–æ—Ç 80 000 ‚ÇΩ',
    image: 'ü•á'
  },
  {
    id: 5,
    title: '–ü–æ–¥–∞—Ä–æ—á–Ω—ã–π –Ω–∞–±–æ—Ä VIP',
    category: '–ù–∞–±–æ—Ä—ã',
    occasion: '–î–µ–ª–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞',
    recipient: '–ö–ª–∏–µ–Ω—Ç—É',
    price: '–æ—Ç 120 000 ‚ÇΩ',
    image: 'üíº'
  },
  {
    id: 6,
    title: '–ú–µ–¥–∞–ª—å "–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ"',
    category: '–ú–µ–¥–∞–ª–∏',
    occasion: '–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ',
    recipient: '–°–ø–æ—Ä—Ç—Å–º–µ–Ω—É',
    price: '–æ—Ç 18 000 ‚ÇΩ',
    image: 'ü•â'
  }
];

const categories = ['–í—Å–µ', '–ö—É–±–∫–∏', '–°—Ç–∞—Ç—É—ç—Ç–∫–∏', '–ü–ª–∞–∫–µ—Ç–∫–∏', '–ú–µ–¥–∞–ª–∏', '–ù–∞–±–æ—Ä—ã'];
const occasions = ['–í—Å–µ', '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ', '–Æ–±–∏–ª–µ–π', '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è', '–ö–æ–Ω–∫—É—Ä—Å', '–î–µ–ª–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞', '–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ'];
const recipients = ['–í—Å–µ', '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é', '–ü–∞—Ä—Ç–Ω–µ—Ä—É', '–°–ø–∏–∫–µ—Ä—É', '–ö–æ–º–∞–Ω–¥–µ', '–ö–ª–∏–µ–Ω—Ç—É', '–°–ø–æ—Ä—Ç—Å–º–µ–Ω—É'];

interface CatalogProps {
  onSelectForAI?: (product: Product) => void;
}

export default function Catalog({ onSelectForAI }: CatalogProps) {
  const [activeCategory, setActiveCategory] = useState('–í—Å–µ');
  const [activeOccasion, setActiveOccasion] = useState('–í—Å–µ');
  const [activeRecipient, setActiveRecipient] = useState('–í—Å–µ');

  const filteredProducts = products.filter(p => {
    const categoryMatch = activeCategory === '–í—Å–µ' || p.category === activeCategory;
    const occasionMatch = activeOccasion === '–í—Å–µ' || p.occasion === activeOccasion;
    const recipientMatch = activeRecipient === '–í—Å–µ' || p.recipient === activeRecipient;
    return categoryMatch && occasionMatch && recipientMatch;
  });

  return (
    <section id="catalog" className="py-20 bg-muted/30">
      <div className="container mx-auto px-4">
        <h2 className="text-4xl md:text-5xl font-bold text-center mb-12 text-primary">
          –ö–∞—Ç–∞–ª–æ–≥ –Ω–∞–≥—Ä–∞–¥ –∏ –ø–æ–¥–∞—Ä–∫–æ–≤
        </h2>

        <div className="mb-12 space-y-6">
          <div>
            <p className="text-sm font-medium mb-3 text-muted-foreground">–¢–∏–ø –Ω–∞–≥—Ä–∞–¥—ã</p>
            <div className="flex flex-wrap gap-2">
              {categories.map(cat => (
                <Button
                  key={cat}
                  variant={activeCategory === cat ? 'default' : 'outline'}
                  size="sm"
                  onClick={() => setActiveCategory(cat)}
                  className="rounded-full"
                >
                  {cat}
                </Button>
              ))}
            </div>
          </div>

          <div>
            <p className="text-sm font-medium mb-3 text-muted-foreground">–¢–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</p>
            <div className="flex flex-wrap gap-2">
              {occasions.map(occ => (
                <Button
                  key={occ}
                  variant={activeOccasion === occ ? 'default' : 'outline'}
                  size="sm"
                  onClick={() => setActiveOccasion(occ)}
                  className="rounded-full"
                >
                  {occ}
                </Button>
              ))}
            </div>
          </div>

          <div>
            <p className="text-sm font-medium mb-3 text-muted-foreground">–ö–æ–º—É –¥–∞—Ä—è—Ç</p>
            <div className="flex flex-wrap gap-2">
              {recipients.map(rec => (
                <Button
                  key={rec}
                  variant={activeRecipient === rec ? 'default' : 'outline'}
                  size="sm"
                  onClick={() => setActiveRecipient(rec)}
                  className="rounded-full"
                >
                  {rec}
                </Button>
              ))}
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {filteredProducts.map((product, index) => (
            <Card
              key={product.id}
              className="overflow-hidden hover:shadow-xl transition-shadow duration-300 animate-scale-in"
              style={{ animationDelay: `${index * 0.1}s` }}
            >
              <div className="aspect-square bg-muted relative overflow-hidden flex items-center justify-center text-8xl">
                {product.image}
                <Badge className="absolute top-4 right-4 bg-secondary">
                  {product.category}
                </Badge>
              </div>
              <CardContent className="p-6">
                <h3 className="text-xl font-semibold mb-2">{product.title}</h3>
                <div className="flex items-center gap-2 text-sm text-muted-foreground mb-4">
                  <Icon name="Calendar" size={16} />
                  <span>{product.occasion}</span>
                </div>
                <div className="flex items-center gap-2 text-sm text-muted-foreground mb-4">
                  <Icon name="User" size={16} />
                  <span>{product.recipient}</span>
                </div>
                <div className="flex items-center justify-between mb-4">
                  <p className="text-lg font-semibold text-primary">{product.price}</p>
                </div>
                <div className="grid grid-cols-2 gap-2">
                  <Button variant="outline" size="sm">
                    –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                  </Button>
                  <Button 
                    size="sm"
                    onClick={() => onSelectForAI?.(product)}
                  >
                    <Icon name="Sparkles" className="mr-1" size={14} />
                    AI –º–∞–∫–µ—Ç
                  </Button>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </section>
  );
}